// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
Name: Curtis Kauer
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    //to figure out if address[15] = keyboard (0110 0000 0000 0000)
    And(a=address[14], b=address[13], out=ifKeyboard);

    //to figure out if address[15] = screen (0100 0000 0000 0000)
    Not(in=address[13], out=not13);
    And(a=address[14], b=not13, out=isScreen);

    //to figure out to load into screen
    And(a=isScreen, b=load, out=loadScreen);

    //to figure out if the input is greater than 16,383
    Or(a=isScreen, b=ifKeyboard, out=greaterThan);

    Keyboard(out=isKeyboard);
    Screen(in=in, address=address[0..12], load=loadScreen, out=ifScreen);
    Mux16(a=ifScreen, b=isKeyboard, sel=ifKeyboard, out=currentValue);

    Mux16(a=in, b=currentValue, sel=greaterThan, out=RAMinput);

    //to figure out that the input isnt greater than 16,383
    Not(in=greaterThan, out=notGreaterThan);
    //figure out if we load it into the RAM
    And(a=notGreaterThan, b=load, out=toLoadRAM);

    RAM16K(in=RAMinput, load=toLoadRAM, address=address[0..13], out=ramed);

    Mux4Way16(a=ramed, b=isKeyboard, c=ifScreen, d=ramed, sel[0]=ifKeyboard, sel[1]=isScreen, out=out);
}
