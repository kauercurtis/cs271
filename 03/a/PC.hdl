// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
Name: Curtis Kauer
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    //convert in[16] to 0000 0000 0000 0000
    //to zero in (subtracting in from itself)
    Not16(in=in[0..15], out=inDifference);
    //in is now the maximum 16 bit Number (1111 1111 1111 1111)
    Add16(a=in[0..15], b=inDifference, out=maxIn);
    //increment by 1 to get a zero 16 bit Number (0000 0000 0000 0000)
    Inc16(in=maxIn, out=zeroedIn);
    
    //Combinatorial logic to determine if register's value changes
    Or(a=inc, b=load, out=incOrload);
    Or(a=incOrload, b=reset, out=incOrloadOrreset);
    
    Inc16(in=value, out=incremented);
    Mux16(a=in, b=incremented, sel=inc, out=firstInc);
    Mux16(a=firstInc, b=in, sel=load, out=secondLoad);
    Mux16(a=secondLoad, b=zeroedIn, sel=reset, out=thirdReset);
    Register(in=thirdReset, load=incOrloadOrreset, out=value, out=out);
}
