// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Inc16.hdl

/**
Name: Curtis Kauer
 * 16-bit incrementer:
 * out = in + 1 (arithmetic addition)
 */

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    /*
        Inc16 = (Not(in[0]) Or in[0])Xor(in) + HalfAdder + FullAdderx15 
    */

    PARTS:

    Not(in=in[0], out=notA);
    Or(a=notA, b=in[0], out=one);
    Xor(a=in[0], b=in[0], out=zero);

    HalfAdder(a=in[0], b=one, sum=out[0], carry=carryA);

    FullAdder(a=in[1], b=zero, c=carryA, sum=out[1], carry=carryB);
    FullAdder(a=in[2], b=zero, c=carryB, sum=out[2], carry=carryC);
    FullAdder(a=in[3], b=zero, c=carryC, sum=out[3], carry=carryD);
    FullAdder(a=in[4], b=zero, c=carryD, sum=out[4], carry=carryE);
    FullAdder(a=in[5], b=zero, c=carryE, sum=out[5], carry=carryF);
    FullAdder(a=in[6], b=zero, c=carryF, sum=out[6], carry=carryG);
    FullAdder(a=in[7], b=zero, c=carryG, sum=out[7], carry=carryH);
    FullAdder(a=in[8], b=zero, c=carryH, sum=out[8], carry=carryI);
    FullAdder(a=in[9], b=zero, c=carryI, sum=out[9], carry=carryJ);
    FullAdder(a=in[10], b=zero, c=carryJ, sum=out[10], carry=carryK);
    FullAdder(a=in[11], b=zero, c=carryK, sum=out[11], carry=carryL);
    FullAdder(a=in[12], b=zero, c=carryL, sum=out[12], carry=carryM);
    FullAdder(a=in[13], b=zero, c=carryM, sum=out[13], carry=carryN);
    FullAdder(a=in[14], b=zero, c=carryN, sum=out[14], carry=carryO);
    FullAdder(a=in[15], b=zero, c=carryO, sum=out[15], carry=carryP);

}